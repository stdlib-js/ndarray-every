// Copyright (c) 2025 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import s from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.2.1-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-ndarray-like@v0.2.2-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-unary-reduce-subarray@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-every@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-spread-dimensions@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-indices-complement@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-shape@v0.2.2-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-order@v0.2.2-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-data-buffer@v0.2.2-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-strides@v0.2.2-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-offset@v0.2.2-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-empty@v0.3.0-esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-ctor@v0.2.2-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/strided-base-reinterpret-boolean@v0.0.2-esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-take-indexed@v0.2.2-esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-zero-to@v0.2.1-esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/object-assign@v0.2.2-esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@v0.2.2-esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.2.2-esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.2.2-esm/index.mjs";import{isPrimitive as y}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.2.2-esm/index.mjs";import{primitives as x}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-integer-array@v0.2.2-esm/index.mjs";import w from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-empty-collection@v0.2.2-esm/index.mjs";import k from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-to-unique-normalized-indices@esm/index.mjs";import E from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-join@v0.1.1-esm/index.mjs";import T from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-ndims@v0.2.2-esm/index.mjs";var O={dims:null,keepdims:!1};function z(s,e,r){var t;if(!g(r))return new TypeError(c("null2V",r));if(u(r,"keepdims")&&(s.keepdims=r.keepdims,!y(s.keepdims)))return new TypeError(c("null2o","keepdims",s.keepdims));if(u(r,"dims")){if(s.dims=r.dims,!x(s.dims)&&!w(s.dims))return new TypeError(c("invalid option. `%s` option must be an array of integers. Option: `%s`.","dims",s.dims));if(null===(t=k(s.dims,e-1)))return new RangeError(c("invalid option. `%s` option contains an out-of-bounds dimension index. Option: [%s].","dims",E(s.dims,",")));if(t.length!==s.dims.length)return new Error(c("invalid option. `%s` option contains duplicate indices. Option: [%s].","dims",E(s.dims,",")));s.dims=t}return null}function V(s,g){var u,y,x,w,k,E,T,V;if(!e(s))throw new TypeError(c("null5t",s));if(T=(k=d(s)).length,u=f({},O),arguments.length>1&&(x=z(u,T,g)))throw x;return null===u.dims&&(u.dims=b(T)),w=n(T,u.dims),E=v(k,w),V=p(E,{dtype:"bool",order:m(s)}),y=new j("uint8",h(o(V),0),E,a(V,!1),l(V),m(V)),r(t,[s,y],u.dims),u.keepdims&&(V=i(T,V,w)),V}function q(s,i,n){var d,m,o;if(!e(s))throw new TypeError(c("null5t",s));if(!e(i))throw new TypeError(c("invalid argument. Second argument must be an ndarray-like object. Value: `%s`.",i));if(o=T(s),d=f({},O),arguments.length>2&&(m=z(d,o,n)))throw m;return null===d.dims&&(d.dims=b(o)),r(t,[s,i],d.dims),i}s(V,"assign",q);export{q as assign,V as default};
//# sourceMappingURL=index.mjs.map
