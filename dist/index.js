"use strict";var v=function(r,i){return function(){return i||r((i={exports:{}}).exports,i),i.exports}};var l=v(function(dr,j){j.exports={dims:null,keepdims:!1}});var q=v(function(vr,g){"use strict";var T=require("@stdlib/assert-is-plain-object"),f=require("@stdlib/assert-has-own-property"),R=require("@stdlib/assert-is-boolean").isPrimitive,S=require("@stdlib/assert-is-integer-array").primitives,V=require("@stdlib/assert-is-empty-collection"),z=require("@stdlib/ndarray-base-to-unique-normalized-indices"),p=require("@stdlib/array-base-join"),d=require("@stdlib/string-format");function A(r,i,e){var a;if(!T(e))return new TypeError(d("invalid argument. Options argument must be an object. Value: `%s`.",e));if(f(e,"keepdims")&&(r.keepdims=e.keepdims,!R(r.keepdims)))return new TypeError(d("invalid option. `%s` option must be a boolean. Option: `%s`.","keepdims",r.keepdims));if(f(e,"dims")){if(r.dims=e.dims,!S(r.dims)&&!V(r.dims))return new TypeError(d("invalid option. `%s` option must be an array of integers. Option: `%s`.","dims",r.dims));if(a=z(r.dims,i-1),a===null)return new RangeError(d("invalid option. `%s` option contains an out-of-bounds dimension index. Option: [%s].","dims",p(r.dims,",")));if(a.length>i)return new RangeError(d("invalid option. `%s` option specifies more dimensions than exists in the input array. Number of dimensions: %d. Option: [%s].",i,p(r.dims,",")));r.dims=a}return null}g.exports=A});var b=v(function(or,c){"use strict";var C=require("@stdlib/assert-is-ndarray-like"),I=require("@stdlib/ndarray-base-unary-reduce-subarray"),N=require("@stdlib/ndarray-base-every"),x=require("@stdlib/ndarray-base-spread-dimensions"),B=require("@stdlib/array-base-indices-complement"),D=require("@stdlib/ndarray-shape"),y=require("@stdlib/ndarray-base-order"),F=require("@stdlib/ndarray-base-data-buffer"),L=require("@stdlib/ndarray-base-strides"),P=require("@stdlib/ndarray-base-offset"),G=require("@stdlib/ndarray-empty"),H=require("@stdlib/ndarray-base-ctor"),J=require("@stdlib/strided-base-reinterpret-boolean"),K=require("@stdlib/array-base-take-indexed"),M=require("@stdlib/array-base-zero-to"),Q=require("@stdlib/object-assign"),U=require("@stdlib/string-format"),W=l(),X=q();function Y(r,i){var e,a,s,t,o,m,u,n;if(!C(r))throw new TypeError(U("invalid argument. First argument must be an ndarray-like object. Value: `%s`.",r));if(o=D(r),u=o.length,e=Q({},W),arguments.length>1&&(s=X(e,u,i),s))throw s;return e.dims===null&&(e.dims=M(u)),t=B(u,e.dims),m=K(o,t),n=G(m,{dtype:"bool",order:y(r)}),a=new H("uint8",J(F(n),0),m,L(n,0),P(n),y(n)),I(N,[r,a],e.dims),e.keepdims&&(n=x(u,n,t)),n}c.exports=Y});var O=v(function(mr,k){"use strict";var w=require("@stdlib/assert-is-ndarray-like"),Z=require("@stdlib/ndarray-base-unary-reduce-subarray"),_=require("@stdlib/ndarray-ndims"),$=require("@stdlib/ndarray-base-every"),rr=require("@stdlib/object-assign"),er=require("@stdlib/array-base-zero-to"),h=require("@stdlib/string-format"),ir=l(),ar=q();function nr(r,i,e){var a,s,t;if(!w(r))throw new TypeError(h("invalid argument. First argument must be an ndarray-like object. Value: `%s`.",r));if(!w(i))throw new TypeError(h("invalid argument. Second argument must be an ndarray-like object. Value: `%s`.",i));if(t=_(r),a=rr({},ir),arguments.length>2&&(s=ar(a,t,e),s))throw s;return a.dims===null&&(a.dims=er(t)),Z($,[r,i],a.dims),i}k.exports=nr});var sr=require("@stdlib/utils-define-nonenumerable-read-only-property"),E=b(),tr=O();sr(E,"assign",tr);module.exports=E;
/**
* @license Apache-2.0
*
* Copyright (c) 2025 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
//# sourceMappingURL=index.js.map
